{"version":3,"sources":["compoments/MatchDetailCard.js","compoments/MatchSmallCard.js","pages/TeamPage.js","compoments/YearSelector.js","pages/MatchPage.js","compoments/TeamTile.js","pages/HomePage.js","App.js","reportWebVitals.js","index.js"],"names":["MatchDetailCard","match","teamName","otherTeam","team1","team2","otherteamRouter","isMatchWon","matchWinner","className","to","date","venue","resultMargin","result","playerOfMatch","umpire1","umpire2","MatchSmallCard","TeamPage","useState","matches","team","setTeam","useParams","useEffect","a","fetch","response","json","data","console","log","fecthMatces","title","value","totalMatches","totalWins","color","slice","map","id","process","YearSelector","years","i","push","year","MatchPage","setMatches","fetchMatches","TeamTile","HomePage","teams","setTeams","fetchAllTeams","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.59a76ee9.chunk.js","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom';\nimport './MatchDetailCard.scss'\nexport const MatchDetailCard=({match,teamName})=> {\n\n    if(!match) return null;\n    const otherTeam=teamName===match.team1?match.team2:match.team1;\n    const otherteamRouter=`/teams/${otherTeam}`\n    const isMatchWon=teamName===match.matchWinner;\n \n    \n \n    return (\n        <div className={isMatchWon ?'MatchDetailCard won-card':'MatchDetailCard loss-card'}>\n           <div>\n        <spam className=\"vs\"> Vs</spam>\n            <h1> <Link to={otherteamRouter}>{otherTeam}</Link></h1>\n    <h3 className=\"match-date\">{match.date}</h3>\n            <h3 className=\"match-venue\">{match.venue}</h3>\n            <h3 className=\"match-result\">{match.matchWinner} won by {match.resultMargin} {match.result}</h3>\n            </div>\n            <div className=\"additional-detail\">\n          <h3>First Innings</h3>\n          <p>{match.team1}</p>\n          <h3>Second Innings</h3>\n          <p>{match.team2}</p>\n          <h3>Man of the match</h3>\n          <p>{match.playerOfMatch}</p>\n          <h3>Umpires</h3>\n          <p>{match.umpire1}, {match.umpire2}</p>\n          \n\n        </div>\n\n        </div>\n    )\n}\n\n","import React from 'react'\nimport { Link } from 'react-router-dom';\nimport './MatchSmallCard.scss'\n\nexport const MatchSmallCard=({teamName,match})=> {\n\n    if(!match) return null;\n    const otherTeam=teamName===match.team1?match.team2:match.team1;\n    const otherteamRouter=`/teams/${otherTeam}`\n    const isMatchWon=teamName===match.matchWinner;\n\n\n    return (\n         <div className={isMatchWon ?'MatchSmallCard won-card':'MatchSmallCard loss-card'}>\n             <spam className=\"vs\"> Vs</spam>\n            <h1> <Link to={otherteamRouter}>{otherTeam}</Link></h1>\n            <p>{match.matchWinner} won by {match.resultMargin} {match.result}</p>\n        </div>\n           \n    )\n}\n","import React,{useEffect,useState} from 'react'\nimport { Link, useParams } from 'react-router-dom'\nimport {MatchDetailCard} from '../compoments/MatchDetailCard'\nimport {MatchSmallCard} from '../compoments/MatchSmallCard'\nimport './TeamPage.scss'\nimport { PieChart } from 'react-minimal-pie-chart';\n\n\n\n export const  TeamPage=() =>{\n     const[team,setTeam]=useState({matches:[]});\n     const {teamName}=useParams();\n    useEffect(() => {\n        const fecthMatces=async()=>{\n           const response= await fetch(`http://localhost:8080/team/${teamName}`);\n         const data =await response.json();\n         setTeam(data);\n         console.log(data)\n        };\n        fecthMatces();\n       \n    },[teamName])\n    if(!team || !team.teamName){\n        return <h1>page not found</h1>\n    }\n    return (\n        <div className=\"TeamPage\">\n        <div className=\"team-name-section\">\n            <h1 className=\"team-name\">{team.teamName}</h1>\n        </div>\n        <div className=\"win-loss-section\">\n            <p>WIN/LOSSES</p>\n        <PieChart\n                data={[\n                    { title: 'Losses', value: team.totalMatches - team.totalWins, color: '#a34d5d' },\n                    { title: 'Wins', value: team.totalWins, color: '#4da375' },\n                ]}\n                />\n            \n        </div>\n        <div className=\"match-detail-section\">\n            <h3>Latest Matches</h3>\n            <MatchDetailCard teamName={team.teamName} match={team.matches[0]}/>\n        </div>\n        {team.matches.slice(1).map(match => <MatchSmallCard key={match.id} teamName={team.teamName} match={match} />)}\n        <div className=\"more-link\">\n        <Link to={`/teams/${teamName}/matches/${process.env.REACT_APP_DATA_END_YEAR}`}>More </Link>\n        </div>\n        </div>\n    )\n}\n\n","import { React } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './YearSelector.scss';\n\nexport const YearSelector = ({teamName}) => {\n    \n    let years = [];\n    const startYear = process.env.REACT_APP_DATA_START_YEAR;\n    const endYear = process.env.REACT_APP_DATA_END_YEAR;\n\n    for (let i = startYear; i <= endYear; i++ ) {\n        years.push(i);\n    }\n\n\n    return (\n        <ol className=\"YearSelector\">\n        { years.map(year => (\n            <li key={year}>\n                <Link to={`/teams/${teamName}/matches/${year}`}>{year}</Link>\n            </li>\n        )) }\n        </ol>\n    )\n\n}","import { React, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { MatchDetailCard } from '../compoments/MatchDetailCard';\nimport './MatchPage.scss';\nimport {YearSelector,} from '../compoments/YearSelector';\n\n\nexport const MatchPage = () => {\n\n\n    const [matches, setMatches] = useState([]);\n    const { teamName, year } = useParams();\n    useEffect(\n        () => {\n         const fetchMatches = async () => {\n            const response = await fetch(`http://localhost:8080/team/${teamName}/matches?year=${year}`);\n            const data = await response.json();\n            setMatches(data);\n\n         };\n         fetchMatches();\n            \n\n\n        }, [teamName, year]\n    );\n\n   \n    return (\n        <div className=\"MatchPage\">\n\n            <div className=\"year-selector\">\n                <h3>Select year</h3>\n                <YearSelector teamName={teamName}/>\n            </div>\n            <div>\n                <h1 className=\"page-heading\">{teamName} matches in {year}</h1>\n                <div>{ \n                    matches.map(match => <MatchDetailCard key={match.id} teamName={teamName} match={match} />)\n                }\n                </div>\n            </div>\n\n        </div>\n    );\n}","import { React } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './TeamTile.scss';\nexport const TeamTile = ({teamName}) => {\n\n\n    return (\n        <div className=\"TeamTile\">\n            <h1>\n                    <Link to={`/teams/${teamName}`}>\n                        {teamName}\n                    </Link>\n                </h1>\n        </div>\n    )\n}\n","import { React, useEffect, useState } from 'react';\nimport './HomePage.scss';\nimport { TeamTile } from '../compoments/TeamTile';\n\n\nexport const HomePage = () => {\n\n    const [teams, setTeams] = useState([]);\n    useEffect(\n        () => {\n         const fetchAllTeams = async () => {\n            const response = await fetch(`${process.env.REACT_APP_API_ROOT_URL}/team`);\n            const data = await response.json();\n            setTeams(data);\n\n         };\n         fetchAllTeams();\n            \n\n\n        }, []\n    );\n\n    return (\n        <div className=\"HomePage\">\n            <div className=\"header-section\">\n                <h1 className=\"app-name\">Java Brains IPL Dashboard</h1>\n            </div>\n            <div className=\"team-grid\">\n                { teams.map(team => <TeamTile key={team.id} teamName={team.teamName} />)}\n            </div>\n        </div>\n        \n    );\n}","\nimport './App.scss';\nimport { HashRouter as Router,Route,Switch } from 'react-router-dom'\nimport {TeamPage} from './pages/TeamPage'\nimport {MatchPage} from './pages/MatchPage'\nimport {HomePage} from './pages/HomePage'\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      \n      <Router>\n      <Switch>\n      <Route path=\"/teams/:teamName/matches/:year\">\n     <MatchPage />\n     </Route>\n        <Route path=\"/teams/:teamName\">\n     <TeamPage />\n     </Route>\n     <Route path=\"/\">\n     <HomePage/>\n     </Route>\n     </Switch>\n     </Router>\n  \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}